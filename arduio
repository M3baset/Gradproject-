
#include <WiFi.h>
#include <HTTPClient.h>
#include <Wire.h>
#include "MAX30105.h"
#include "spo2_algorithm.h"

// Wi-Fi credentials
const char* ssid = "MAH.";
const char* password = "eng.mohamed97..";
const char* serverUrl = "http://192.168.1.8/max.php";

MAX30105 particleSensor;

uint32_t irBuffer[100];  // Infrared LED readings
uint32_t redBuffer[100]; // Red LED readings
int32_t heartRate;
int8_t validHeartRate;
int32_t spo2;
int8_t validSpo2;

void setup() {
    Serial.begin(115200);
    WiFi.begin(ssid, password);

    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.println("Connecting to WiFi...");
    }
    Serial.println("Connected to WiFi!");

    if (!particleSensor.begin()) {
        Serial.println("MAX30102 not found. Check wiring.");
        while (1);
    }

    particleSensor.setup();
    particleSensor.setPulseAmplitudeRed(0x0A);
    particleSensor.setPulseAmplitudeIR(0x0A);
}

void loop() {
    for (int i = 0; i < 100; i++) {
        redBuffer[i] = particleSensor.getRed();
        irBuffer[i] = particleSensor.getIR();
        delay(10);
    }

    maxim_heart_rate_and_oxygen_saturation(irBuffer, 100, redBuffer, &spo2, &validSpo2, &heartRate, &validHeartRate);

    if (validHeartRate && validSpo2) {
        Serial.printf("Heart Rate: %d bpm | SpO2: %d %%\n", heartRate, spo2);

        if (WiFi.status() == WL_CONNECTED) {
            HTTPClient http;
            http.setTimeout(5000);  // Set HTTP timeout to 5 seconds
            http.begin(serverUrl);
            http.addHeader("Content-Type", "application/json");

            String payload = "{\"heart_rate\": " + String(heartRate) + ", \"spo2\": " + String(spo2) + "}";

            int httpResponseCode = http.POST(payload);

            if (httpResponseCode > 0) {
                Serial.printf("HTTP Response Code: %d\n", httpResponseCode);
                Serial.println(http.getString()); // Show server response
            } else {
                Serial.print("Error sending data to server. Error code: ");
                Serial.println(httpResponseCode);
            }

            http.end();
        } else {
            Serial.println("Not connected to WiFi");
        }
    } else {
        Serial.println("Put your finder :)");
    }

    delay(5000); // Increase delay to avoid flooding the server
}
